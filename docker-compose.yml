version: '3'
services:
  # Homeassistant configuration: 
  #    https://community.home-assistant.io/t/improving-docker-security-non-root-configuration/399971/9
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./homeassistant/run:/etc/services.d/home-assistant/run
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus
    restart: on-failure
    network_mode: host
    depends_on:
      mariadb:
        condition: service_healthy
        restart: true
      mosquitto:
        condition: service_started
    environment:
      - PUID=8123
      - PGID=8123
      - EXTRA_GID=997 114 112 20
      - UMASK=007
      - PACKAGES=iputils
    devices:
      - /dev/mem:/dev/mem
      - /dev/gpiomem:/dev/gpiomem
    security_opt:
      - no-new-privileges
    # cap_add:
    #  - NET_RAW
    #  - NET_ADMIN
    #  - SYS_RAWIO
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homeassistant.rule=Host(`dashboard.${DUCKDNS_DOMAIN}.duckdns.org`)"
      - "traefik.http.routers.homeassistant.entrypoints=websecure"
      - "traefik.http.routers.homeassistant.tls.certresolver=duckdnsResolver"
      - "traefik.http.services.homeassistant.loadbalancer.server.url=http://${HOST_IP}"
      - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"

  # Mosquitto MQTT Broker
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/log:/mosquitto/log
      - ./mosquitto/data:/mosquitto/data
    restart: on-failure
    expose:
      - 1883:1883  # tcp (mqtt://) protocol with TLS, Traefik will redirect traffic from outside here
    ports:
      - 9001:9001  # ws protocol, Traefik will redirect ws:// traffic from 443 here. But also accessible inside the local LAN without TLS
      - 1884:1884  # tcp (mqtt://) protocol, only for traffic without TLS
    networks:
      - iot-server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mqtt.rule=Host(`mqtt.${DUCKDNS_DOMAIN}.duckdns.org`)"
      - "traefik.http.routers.mqtt.entrypoints=websecure"
      - "traefik.http.routers.mqtt.tls.certresolver=duckdnsResolver"
      - "traefik.http.services.mqtt.loadbalancer.server.port=9001"
      - "traefik.tcp.routers.mqtt.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mqtt.entrypoints=mqtt"
      - "traefik.tcp.routers.mqtt.tls.certresolver=duckdnsResolver"
      - "traefik.tcp.services.mqtt.loadbalancer.server.port=1883"

  # MariaDB database
  mariadb:
    container_name: mariadb
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mariadb_password
      MYSQL_DATABASE: homeassistant
      MYSQL_USER: user
      MYSQL_PASSWORD_FILE: /run/secrets/mariadb_password
    secrets:
       - mariadb_password
    volumes:
      - ./mariadb/data:/var/lib/mysql
    restart: on-failure
    ports:
      - 3306:3306
    networks:
      - iot-server
    healthcheck:
      test: mariadb --user=root --password=$(cat $$MYSQL_ROOT_PASSWORD_FILE) --silent --execute "SELECT 1"
      start_period: 5s
      interval: 2s
      retries: 10
      timeout: 30s

  # Traefik reverse proxy
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: on-failure
    environment:
      - DUCKDNS_TOKEN_FILE=/run/secrets/duckdns_token
      - DUCKDNS_DOMAIN
    ports:
      - 80:80
      - 443:443
      - 8080:8080
      - 1883:1883
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/config:/etc/traefik
      - ./traefik/log:/var/log/traefik
    networks:
      - iot-server
    secrets:
       - duckdns_token
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  # DuckDNS update service
  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - SUBDOMAINS=${DUCKDNS_DOMAIN}
      - FILE__TOKEN=/run/secrets/duckdns_token
      - LOG_FILE=true
      - PUID=1000
      - PGID=1000
    secrets:
       - duckdns_token
    volumes:
      - ./duckdns:/config
    restart: on-failure

  # Visual Studio code
  vscode:
    container_name: vscode
    image: codercom/code-server:latest
    restart: on-failure
    volumes:
      - .:/home/coder/project
    ports:
      - "8443:8443"
    group_add:
      - "8123"
    # Workaround to use secrets to set the PASSWORD envrionment variable
    # See: https://stackoverflow.com/questions/48094850/docker-stack-setting-environment-variable-from-secrets
    entrypoint: [ '/bin/bash', '-c', 'export PASSWORD=$$(cat /var/run/secrets/vscode_password); source /usr/bin/entrypoint.sh --disable-telemetry --bind-addr 0.0.0.0:8443 /home/coder/project']
    secrets:
       - vscode_password
    networks:
      - iot-server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vscode.rule=Host(`editor.${DUCKDNS_DOMAIN}.duckdns.org`)"
      - "traefik.http.routers.vscode.entrypoints=websecure"
      - "traefik.http.routers.vscode.tls.certresolver=duckdnsResolver"
      - "traefik.http.services.vscode.loadbalancer.server.port=8443"

secrets:
  mariadb_password:
     file: ./secrets/mariadb_password.txt
  duckdns_token:
     file: ./secrets/duckdns_token.txt
  vscode_password:
      file: ./secrets/vscode_password.txt

networks:
  iot-server:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
